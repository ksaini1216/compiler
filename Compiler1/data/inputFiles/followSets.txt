prog -> $
classDeclList -> program|int|float|id
funcDefList -> program
classDecl -> class|program|int|float|id
inheritedList -> {
idInClassDeclList -> {
memberList -> }
memberListNew -> }
funcInClass -> }
funcInClassNew -> }
funcDecl -> int|float|id|}
funcHead -> {
funcHeadId -> (
scopeSpec -> (
funcDef -> int|float|id|program
funcBody -> ;
varStatinFunc -> }
varStatinFuncNew -> }
varStat -> id|float|int|if|for|get|put|return|}
varStatNew -> id|if|for|get|put|return|}
varStatTail -> id|float|int|if|for|get|put|return|}
assignStatTail -> ;
typeNew -> id
statementOther -> id|float|int|if|for|get|put|return|}
statementList -> }
varDecl -> int|float|id|if|for|get|put|return|}
arraySizeList -> ,|;|)
statement -> if|for|get|put|return|id|else|;|}
assignStat -> ;|)
statBlock -> else|;
expr -> ,|)|;
exprNew -> ,|)|;
relExpr -> ;
arithExpr -> ]|)|eq|neq|lt|gt|leq|geq|;|,
arithExprNew -> ]|)|eq|neq|lt|gt|leq|geq|;|,
sign -> intNum|floatNum|(|not|id|+|-
term -> +|-|or|]|)|eq|neq|lt|gt|leq|geq|;|,
termNew -> +|-|or|]|)|eq|neq|lt|gt|leq|geq|;|,
factor -> *|/|and|+|-|or|]|)|eq|neq|lt|gt|leq|geq|;|,
variable -> =|)
variableNew -> =|)
varFunc -> *|/|and|+|-|or|]|)|eq|neq|lt|gt|leq|geq|;|,
varFuncTail -> *|/|and|+|-|or|]|)|eq|neq|lt|gt|leq|geq|;|,
varFuncTail2 -> *|/|and|+|-|or|]|)|eq|neq|lt|gt|leq|geq|;|,
idnestListNew -> (|*|/|and|+|-|or|]|)|eq|neq|lt|gt|leq|geq|;|,
indiceList -> .|=|*|/|and|+|-|or|]|)|eq|neq|lt|gt|leq|geq|;|,|(
idnestNew -> .|*|/|and|+|-|or|]|)|eq|neq|lt|gt|leq|geq|;|,|(
idnestNewTail -> .|(|*|/|and|+|-|or|]|)|eq|neq|lt|gt|leq|geq|;|,
indice -> [|.|=|*|/|and|+|-|or|]|)|eq|neq|lt|gt|leq|geq|;|,|(
idnestList -> =|)
idnest -> .|=|)|*|/|and|+|-|or|]|eq|neq|lt|gt|leq|geq|;|,
arraySize -> [|,|;|)
type -> id
fParamsList -> )
fParamsTailList -> )
aParams -> )
aParamsTailList -> )
fParamsTail -> ,|)
aParamsTail -> ,|)
assignOp -> intNum|floatNum|(|not|id|+|-
relOp -> intNum|floatNum|(|not|id|+|-
addOp -> intNum|floatNum|(|not|id|+|-
multOp -> intNum|floatNum|(|not|id|+|-
